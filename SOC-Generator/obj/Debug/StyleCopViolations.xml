<StyleCopViolations>
  <Violation LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="3" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation LineNumber="3" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The class must have an access modifier.</Violation>
  <Violation LineNumber="19" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="169" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="170" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="171" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="172" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="173" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="174" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="175" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="176" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="177" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="178" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All methods must be placed after all fields.</Violation>
  <Violation LineNumber="18" StartLine="18" StartColumn="18" EndLine="18" EndColumn="27" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to components must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="16" StartLine="16" StartColumn="32" EndLine="16" EndColumn="41" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to components must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="169" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="170" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="171" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="172" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="173" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="174" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="175" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="176" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="177" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="178" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.Designer.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Engine.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="9" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Engine.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="9" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Engine.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The class must have an access modifier.</Violation>
  <Violation LineNumber="15" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Engine.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The method must have an access modifier.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory" LineNumber="12" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.GenerateRows%List`Dictionary`string`string" LineNumber="14" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.GenerateImageRows%string[]" LineNumber="23" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.xmlRowsToStringArray%List`Row" LineNumber="28" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.streamReaderToList%StreamReader" LineNumber="39" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.parseXmlAttributes%List`string%char" LineNumber="58" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementParametersMustBeDocumented" RuleId="SA1611">The documentation header must contain param tags matching the element's parameter list.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.parseXmlAttributes%List`string%char" LineNumber="58" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the return tag contains incorrectly spelled words: kv</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.GenerateRows%List`Dictionary`string`string" LineNumber="21" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.parseXmlAttributes%List`string%char" LineNumber="69" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.parseXmlAttributes%List`string%char" LineNumber="71" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory" LineNumber="12" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The class must have an access modifier.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.xmlRowsToStringArray%List`Row" LineNumber="28" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: xmlRowsToStringArray.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.streamReaderToList%StreamReader" LineNumber="39" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: streamReaderToList.</Violation>
  <Violation Section="Root.SOC_Generator.FormatFactory.parseXmlAttributes%List`string%char" LineNumber="58" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: parseXmlAttributes.</Violation>
  <Violation Section="Root.SOC_Generator.System.Linq" LineNumber="5" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation Section="Root.SOC_Generator.System.Text" LineNumber="6" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation Section="Root.SOC_Generator.System.Threading.Tasks" LineNumber="7" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\FormatFactory.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.GeneratorBase" LineNumber="10" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\GeneratorBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.GeneratorBase.Generate" LineNumber="12" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\GeneratorBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\GeneratorBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator" LineNumber="7" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator.generatedOutput" LineNumber="9" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator.rowGenerationData" LineNumber="10" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator.rowCount" LineNumber="11" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator.RowGenerator%List`Dictionary`string`string" LineNumber="13" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator.GeneratedOutput" LineNumber="18" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator.InputData" LineNumber="31" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator.Generate" LineNumber="45" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.RowGenerator.Generate" LineNumber="49" StartLine="49" StartColumn="39" EndLine="49" EndColumn="46" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\RowGenerator.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to rowCount must begin with the 'this.', 'base.', 'object.' or 'RowGenerator.' or 'GeneratorBase.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Row.RowTagName" LineNumber="14" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Row.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Row.RowLabelFormat" LineNumber="15" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Row.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Row.Row%int%Dictionary`string`string" LineNumber="22" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Row.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="Row" /&gt; class.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Row.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels" LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Row.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">namespace names begin with an upper-case letter: xmlModels.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag" LineNumber="9" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.TagRepresentFormat" LineNumber="11" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.AttributeRepresentFormat" LineNumber="12" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.tagName" LineNumber="13" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.content" LineNumber="14" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.attributes" LineNumber="15" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.Tag%string%Dictionary`string`string" LineNumber="17" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.TagName" LineNumber="22" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.Content" LineNumber="36" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.Attributes" LineNumber="49" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag.ToString" LineNumber="63" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels.Tag" LineNumber="78" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.SOC_Generator.Generators.ClassModels.xmlModels" LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Generators\ClassModels\xmlModels\Tag.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">namespace names begin with an upper-case letter: xmlModels.</Violation>
  <Violation LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Properties\AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Streamreader.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\obj\Debug\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\obj\Debug\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\obj\Debug\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.SOC_Generator.Generator" LineNumber="15" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PartialElementsMustBeDocumented" RuleId="SA1601">The partial class element must have a documentation header containing either a summary tag or a content tag.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.Delimiter" LineNumber="17" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.outputPathDialog" LineNumber="18" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.readStream" LineNumber="19" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.fileSelected" LineNumber="20" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.reader" LineNumber="21" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.Generator" LineNumber="23" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="28" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonFileBrowser_Click%object%EventArgs" LineNumber="107" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="38" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="75" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="84" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="100" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonFileBrowser_Click%object%EventArgs" LineNumber="124" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ChainedStatementBlocksMustNotBePrecededByBlankLine" RuleId="SA1510">An else, catch, or finally statement must not be preceded by a blank line.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="28" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: buttonGenerate_Click.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonFileBrowser_Click%object%EventArgs" LineNumber="107" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: buttonFileBrowser_Click.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="33" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="33" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="33" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="34" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="92" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="92" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="92" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="93" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation Section="Root.SOC_Generator.Generator.Generator" LineNumber="25" StartLine="25" StartColumn="13" EndLine="25" EndColumn="31" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to InitializeComponent must begin with the 'this.', 'base.', 'object.' or 'Generator.' or 'Form.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="40" StartLine="40" StartColumn="33" EndLine="40" EndColumn="44" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to fileSelected must begin with the 'this.', 'base.', 'object.' or 'Generator.' or 'Form.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="63" StartLine="63" StartColumn="109" EndLine="63" EndColumn="114" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to reader must begin with the 'this.', 'base.', 'object.' or 'Generator.' or 'Form.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="61" StartLine="61" StartColumn="36" EndLine="61" EndColumn="41" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to reader must begin with the 'this.', 'base.', 'object.' or 'Generator.' or 'Form.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="61" StartLine="61" StartColumn="62" EndLine="61" EndColumn="71" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to readStream must begin with the 'this.', 'base.', 'object.' or 'Generator.' or 'Form.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonGenerate_Click%object%EventArgs" LineNumber="59" StartLine="59" StartColumn="29" EndLine="59" EndColumn="40" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to fileSelected must begin with the 'this.', 'base.', 'object.' or 'Generator.' or 'Form.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonFileBrowser_Click%object%EventArgs" LineNumber="121" StartLine="121" StartColumn="21" EndLine="121" EndColumn="32" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to fileSelected must begin with the 'this.', 'base.', 'object.' or 'Generator.' or 'Form.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.SOC_Generator.Generator.buttonFileBrowser_Click%object%EventArgs" LineNumber="126" StartLine="126" StartColumn="21" EndLine="126" EndColumn="32" Source="C:\Users\stamat\documents\visual studio 2013\Projects\SOC-Generator\SOC-Generator\Form1.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to fileSelected must begin with the 'this.', 'base.', 'object.' or 'Generator.' or 'Form.' prefix to indicate the intended method call. </Violation>
</StyleCopViolations>